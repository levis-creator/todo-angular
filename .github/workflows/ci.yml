name: CI Pipeline
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build_test:
    name: Build and Test
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in root
        run: dir

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.1.0
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Lint Angular project
        run: ng lint

      - name: Run unit tests
        run: |
          ng test --watch=false --browsers=ChromeHeadless
          if ($?) {
            echo "✅ Tests Passed!"
          } else {
            echo "❌ Tests Failed!"
            exit 1
          }
        shell: pwsh

      - name: Build Angular project
        run: ng build --configuration production
      - name: Create and Merge Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "Merge changes to main after successful tests"
          branch: auto-merge-branch
          title: "Auto-Merge: Successful CI Run"
          body: |
            All tests passed. This PR has been automatically created and merged.
          base: main

  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Production:
    runs-on: ubuntu-latest
    needs: Deploy-Preview
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
